name: CI
on:
  push:
    branches:
      - master
    tags: [ "*" ]
  pull_request:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 8 ]
        scala: [ '2.11.12', '2.12.19', '2.13.13' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Scala
        uses: olafurpg/setup-scala@v14
        with:
          java-version: ${{ matrix.java-version }}
      - name: Coursier cache
        uses: coursier/cache-action@v6
      - name: Checking Code style
        run: sbt check
      - name: Build and Publish to Local
        run: sbt ++${{ matrix.scala }} clean publishLocal
  
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 8 ]
        scala: [ '2.11.12', '2.12.19', '2.13.13' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Scala
        uses: olafurpg/setup-scala@v14
        with:
          java-version: ${{ matrix.java-version }}
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Test
        run: sbt clean coverage test coverageReport coverageAggregate && bash <(curl -s https://codecov.io/bash)
        
  publish:
    runs-on: ubuntu-latest
    needs: [ test ]
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Scala
        uses: olafurpg/setup-scala@v14
        with:
          java-version: 8 
      - uses: olafurpg/setup-gpg@v3
      - run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}       

  ci:
    runs-on: ubuntu-20.04
    needs: [ build, test ]
    steps:
      - name: Aggregate outcomes
        run: echo "build succeeded"
